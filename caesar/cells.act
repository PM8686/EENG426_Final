namespace cell {

export defcell g0n1n2n3naaa_0123aaox0 (bool? in[4]; bool! out)
{
   prs {
   in[0] | in[1] & in[2] & in[3] -> out-
   ~in[0] & ~in[1] & ~in[2] & ~in[3] -> out+
   }
}

export defcell g0n1n2naa_012aax0 (bool? in[3]; bool! out)
{
   prs * {
   in[0]<15> & in[1]<15> & in[2]<15> -> out-
   ~in[0]<18> & ~in[1]<18> & ~in[2]<18> -> out+
   }
}

export defcell g0n1n2naa_012aox0 (bool? in[3]; bool! out)
{
   prs {
   in[0] | in[1] & in[2] -> out-
   ~in[0] & ~in[1] & ~in[2] -> out+
   }
}

export defcell g0n1n2noo3na0n1n2naao_012oo3a012aaox0 (bool? in[4]; bool! out)
{
   prs {
   (in[0]<20> | in[1] | in[2]) & in[3] | in[0] & in[1] & in[2] -> out-
   (~in[0]<40> | ~in[1]<36> | ~in[2]<36>) & ~in[3]<36> | ~in[0]<48> & ~in[1] & ~in[2] -> out+
   }
}

export defcell g0n1na2no0n1noa_01o2a01aox0 (bool? in[3]; bool! out)
{
   prs {
   (in[0]<10> | in[1]<10>) & in[2]<10> | in[0]<10> & in[1]<10> -> out-
   ~((in[0]<23> | in[1]<23>) & in[2]<11> | in[0]<23> & in[1]<23>) -> out+
   }
}

export defcell g0n_0x0 (bool? in[1]; bool! out)
{
   prs {
   in[0]<40;2> -> out-
   ~in[0]<80;2> -> out+
   }
}

export defcell g0n_0x1 (bool? in[1]; bool! out)
{
   prs {
   in[0]<5> -> out-
   ~in[0]<8> -> out+
   }
}

export defcell g0n_0x2 (bool? in[1]; bool! out)
{
   prs {
   in[0] -> out-
   ~in[0] -> out+
   }
}

export template<pint w,l> defcell p0(bool? in[2]; bool! out) {
  prs { passp<w,l> (in[0],in[1],out) }
}

export template<pint w,l> defcell n0(bool? in[2]; bool! out) {
  prs { passn<w,l> (in[0],in[1],out) }
}

export template<pint w,l> defcell t0(bool? in[3]; bool! out) {
  prs { transgate<w,l> (in[0],in[1],in[2],out) }
}

export defcell p1(bool? in[2]; bool! out) {
  prs { passp (in[0],in[1],out) }
}

export defcell n1(bool? in[2]; bool! out) {
  prs { passn (in[0],in[1],out) }
}

export defcell t1(bool? in[3]; bool! out) {
  prs { transgate (in[0],in[1],in[2],out) }
}

export template<pint w,l> defcell c0(bool in; bool out) {
  prs { cap<w,l> (in,out) }
}

export defcell c1(bool in; bool out) {
  prs { cap (in,out) }
}



}
