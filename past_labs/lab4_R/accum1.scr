watch R.r
watch R.a
watch Reset

echo "Starting initialization"
mode reset
set Reset 1
set L.r 0
set C.r 0
set R.a 0
set C.d[0] 0
set L.d[7] 0
set L.d[6] 0
set L.d[5] 0
set L.d[4] 0
set L.d[3] 0
set L.d[2] 0
set L.d[1] 0
set L.d[0] 1
cycle

echo "Done initializing"
set Reset 0
cycle
mode run

echo "Initial state:"
get L.r
get L.a
get C.r
get C.a
get R.r
get R.a

echo "OP 1: Send C = 0"
set C.d[0] 0

watch m.cr_out_delay
watch m.cd_out
watch m.ctrl_t
watch m.ctrl_f
watch m.c1_out
watch m.c2_out
watch m.pulse_out
watch m.latch[1].D
watch m.latch[1].Q

cycle
set C.r 1
set L.r 1
cycle

echo "Expect 0b00000000"
get R.d[7]
get R.d[6]
get R.d[5]
get R.d[4]
get R.d[3]
get R.d[2]
get R.d[1]
get R.d[0]

echo "Finish handshake"
set L.r 0
set C.r 0
set R.a 1
cycle
set R.a 0
cycle

watch C.r
watch c_to_merge.r

echo "OP 2: Send C = 1 and L = 0b00000001"
set C.d[0] 1
cycle
set C.r 1
set L.r 1
cycle

get C.r
get C.a
get c_to_merge.r
get c_to_merge.a
get m.C.r
get m.C.d[0]
get m.ctrl_t
get m.ctrl_f

echo "Expect 0b00000001"
get R.d[7]
get R.d[6]
get R.d[5]
get R.d[4]
get R.d[3]
get R.d[2]
get R.d[1]
get R.d[0]

echo "Finish handshake"
set L.r 0
set C.r 0
set R.a 1
cycle
set R.a 0
cycle

echo "OP 3: Send C = 1 and L = 0b00000001"
set C.r 1
set L.r 1
cycle

get split_to_merge.d[1]
get split_to_merge.d[0]
get m.mux[1].B
get m.mux[0].B
get m.mux[1].Y
get m.mux[0].Y
get m.latch[1].Q
get m.latch[0].Q
get m.invs[1].Y
get m.invs[0].Y
get source_to_merge.d[1]
get source_to_merge.d[0]
get split_to_merge.d[1]
get split_to_merge.d[0]
get merge_to_copy.d[1]
get merge_to_copy.d[0]

echo "Expect 0b00000010"
get R.d[7]
get R.d[6]
get R.d[5]
get R.d[4]
get R.d[3]
get R.d[2]
get R.d[1]
get R.d[0]

echo "Finish handshake"
set L.r 0
set C.r 0
set R.a 1
cycle
set R.a 0
cycle

echo "OP 4: Send C = 1 and L = 0b00000100"
set L.d[7] 0
set L.d[6] 0
set L.d[5] 0
set L.d[4] 0
set L.d[3] 0
set L.d[2] 1
set L.d[1] 0
set L.d[0] 0
set C.d[0] 1
cycle
set C.r 1
set L.r 1
cycle

echo "Expect 0b00000110"
get R.d[7]
get R.d[6]
get R.d[5]
get R.d[4]
get R.d[3]
get R.d[2]
get R.d[1]
get R.d[0]

echo "Finish handshake"
set L.r 0
set C.r 0
set R.a 1
cycle
set R.a 0
cycle

echo "OP 5: Send C = 0"
set C.d[0] 0
cycle
set C.r 1
set L.r 1
cycle

echo "Expect 0b00000000"
get R.d[7]
get R.d[6]
get R.d[5]
get R.d[4]
get R.d[3]
get R.d[2]
get R.d[1]
get R.d[0]

echo "Finish handshake"
set L.r 0
set C.r 0
set R.a 1
cycle
set R.a 0
cycle

echo "OP 6: Send C = 1 and L = 0b01010100"
set L.d[7] 0
set L.d[6] 1
set L.d[5] 0
set L.d[4] 1
set L.d[3] 0
set L.d[2] 1
set L.d[1] 0
set L.d[0] 0
set C.d[0] 1
cycle
set C.r 1
set L.r 1
cycle

echo "Expect 0b01010100"
get R.d[7]
get R.d[6]
get R.d[5]
get R.d[4]
get R.d[3]
get R.d[2]
get R.d[1]
get R.d[0]

echo "Finish handshake"
set L.r 0
set C.r 0
set R.a 1
cycle
set R.a 0
cycle

echo "OP 7: Send C = 1 and L = 0b00101100"
set L.d[7] 0
set L.d[6] 0
set L.d[5] 1
set L.d[4] 0
set L.d[3] 1
set L.d[2] 1
set L.d[1] 0
set L.d[0] 0
set C.d[0] 1
cycle
set C.r 1
set L.r 1
cycle

echo "Expect 0b10000000"
get R.d[7]
get R.d[6]
get R.d[5]
get R.d[4]
get R.d[3]
get R.d[2]
get R.d[1]
get R.d[0]

echo "Finish handshake"
set L.r 0
set C.r 0
set R.a 1
cycle
set R.a 0
cycle
